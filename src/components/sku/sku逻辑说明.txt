最终sku使用的是填充方法


1.页面加载的时候，根据数据渲染规格键值
2.最初什么也没有选择，this.selectSpec为空
3.数据中所有的able都为true，即所有的规格值都是可选的，在created中使用isAble依据商品来修改规格值的able
4.点击的逻辑一：修改this.selectSpec中的内容，修改点击的规格值活跃状态

先判断able，即是否可选，如果不可选直接不修改规格值活跃状态；如果可选则判断规格值是否处于活跃，如果原来活跃则设置为不活跃，如果不活跃则设置为活跃

5.点击的逻辑二：根据商品修改其他规格值的able

如果规格值可选，则able为true

6.判断规格值是否可选的逻辑实质是把this.selectSpec的规格值循环与stock不为0的商品比较，

{在stock不为0的商品中选择商品1，设置计数器i=0

第一次检验规格值1
若规格值1为空，计数器+1，
若规格值1不为空，且规格值1存在于商品1中，计数器+1

第二次检验规格值2
若规格值2为空，计数器+1，
若规格值2不为空，且规格值2存在于商品1中，计数器+1

第三次检验规格值3
若规格值3为空，计数器+1，
若规格值3不为空，且规格值3存在于商品1中，计数器+1

当所有规格值检验完毕后
若计数器值为3，该次循环return值true，some循环终止并return值true，则说明传入的规格值与已选规格值组合之后匹配了商品1，所以传入的规格值是可选的，判断完毕
若计数器值不为3，说明传入的规格值与已选规格值组合之后不匹配商品1，所以传入的规格值是不可选的，some循环将会继续用商品2检验传入的规格值是否可选，直到商品n}

